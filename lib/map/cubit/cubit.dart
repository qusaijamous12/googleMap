import 'package:bloc/bloc.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:geolocator/geolocator.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:task1/helper/diohelper.dart';
import 'package:task1/helper/locatedHelper.dart';
import 'package:task1/map/cubit/state.dart';
import 'package:task1/models/placesModel.dart';
import 'package:task1/models/serachModel.dart';

class MapCubit extends Cubit<MapState> {
  MapCubit() :super(InitialMapState());

  static MapCubit get(context) => BlocProvider.of(context);

  Position ?position;
  CameraPosition ?myCameraPosition;
  CameraPosition ?myNewCameraPosition;

  dynamic lat;
  dynamic lng;
  Set<Marker> marker={};

  void getMyCurrentLocation() async {
    emit(LoadingGetMyLocationState());
    position = await Locatedhelper.determinePosition().then((value) {
      myCameraPosition = CameraPosition(
        target: LatLng(value.latitude, value.longitude),
        zoom: 17,
        tilt: 0,
        bearing: 0,
      );
      emit(GetMyLocationSuccessState());
    }).catchError((error) {
      print(error.toString());
      emit(GetMyLocationErrorState());
    });
  }

  Autogenerated ?autogenerated;

  void serachPlaces({
    required String text
  }) {
    emit(LoadingSerachPlaces());

    Diohelper.getData(
        path: 'https://maps.googleapis.com/maps/api/place/autocomplete/json',
        query: {
          'input': text,
          'types': 'address',
          'components': 'country:jo',
          'key': 'AIzaSyBGI1eAkoZxZjlwy523NyuVokdv0hCl_k8'
        }).then((value) {
      autogenerated = Autogenerated.fromJson(value.data);
      emit(GetDataSerachPlacesSuccessState());
    }).catchError((error) {
      print(error.toString());
      emit(GetDataSerachPlacesErrorState());
    });
  }
  PlaceId ?placeId;

  void getPlaceId({
    required String placeId,
    required String info
}){
    Diohelper.getData(
        path:'https://maps.googleapis.com/maps/api/place/details/json' ,
        query: {
          'place_id':placeId,
          'fields':'geometry',
          'key':'AIzaSyBGI1eAkoZxZjlwy523NyuVokdv0hCl_k8'
        }).then((value){
          this.placeId=PlaceId.fromJson(value.data);
          lat=this.placeId!.result!.geometry!.location!.lat;
          lng=this.placeId!.result!.geometry!.location!.lng;
          myNewCameraPosition=CameraPosition(
            target: LatLng(lat,lng),
            zoom: 17,
            tilt: 0,
            bearing: 0,
          );
          marker.add(
            Marker(markerId: MarkerId('1'),
              position: LatLng(lat,lng),
              infoWindow: InfoWindow(
                title: '${info}'

              )


            )
          );
          emit(GetPlaceIdSuccessState());

    }).catchError((error){
      print(error.toString());
      emit(GetPlaceErrorState());
    });
  }



}

